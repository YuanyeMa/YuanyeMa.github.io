<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kernel on Yuanye Ma's Blog</title><link>http://0.0.0.0:1313/tags/kernel/</link><description>Recent content in Kernel on Yuanye Ma's Blog</description><generator>Hugo</generator><language>en</language><managingEditor>yuanye.ma@qq.com (Yuanye Ma)</managingEditor><webMaster>yuanye.ma@qq.com (Yuanye Ma)</webMaster><lastBuildDate>Mon, 15 Apr 2019 16:01:23 +0800</lastBuildDate><atom:link href="http://0.0.0.0:1313/tags/kernel/index.xml" rel="self" type="application/rss+xml"/><item><title>input子系统</title><link>http://0.0.0.0:1313/post/os/linux-kernel/input%E5%AD%90%E7%B3%BB%E7%BB%9F/</link><pubDate>Mon, 15 Apr 2019 16:01:23 +0800</pubDate><author>yuanye.ma@qq.com (Yuanye Ma)</author><guid>http://0.0.0.0:1313/post/os/linux-kernel/input%E5%AD%90%E7%B3%BB%E7%BB%9F/</guid><description>[toc] input子系统特性、用途 1， input子系统是用来解决输入问题的，所谓输入，即驱动为应用层提供数据。 2， 使用字符设备的read或者ioc</description></item><item><title>Kobject和sysfs</title><link>http://0.0.0.0:1313/post/os/linux-kernel/kobjectsysfs/</link><pubDate>Mon, 15 Apr 2019 16:01:23 +0800</pubDate><author>yuanye.ma@qq.com (Yuanye Ma)</author><guid>http://0.0.0.0:1313/post/os/linux-kernel/kobjectsysfs/</guid><description>Kobject和sysfs kobject、ktype、kset 以及其相互关系 kobject /* include/linux/kobject.h */ struct kobject { const char *name; struct list_head entry; struct kobject *parent; // 指向kobject的父对象，这</description></item><item><title>kzalloc &amp; kmalloc</title><link>http://0.0.0.0:1313/post/os/linux-kernel/kzalloc--kmalloc/</link><pubDate>Mon, 15 Apr 2019 16:01:23 +0800</pubDate><author>yuanye.ma@qq.com (Yuanye Ma)</author><guid>http://0.0.0.0:1313/post/os/linux-kernel/kzalloc--kmalloc/</guid><description>kzalloc &amp;amp; kmalloc /* include/linux/slab.h */ /** * kzalloc - allocate memory. The memory is set to zero. * @size: how many bytes of memory are required. * @flags: the type of memory to allocate (see kmalloc). */ static inline void *kzalloc(size_t size, gfp_t flags) { return kmalloc(size, flags | __GFP_ZERO); } /* 调用了 kmalloc此函数在inc</description></item><item><title>Linux Kernel Makefiles</title><link>http://0.0.0.0:1313/post/os/linux-kernel/linux-kernel-makefiles/</link><pubDate>Mon, 15 Apr 2019 16:01:23 +0800</pubDate><author>yuanye.ma@qq.com (Yuanye Ma)</author><guid>http://0.0.0.0:1313/post/os/linux-kernel/linux-kernel-makefiles/</guid><description>====================== Linux Kernel Makefiles 这个文档介绍了Linux kernel Makefiles。 .. 目录 === 1 Overview === 2 Who does what === 3 The kbuild files --- 3.1 目标定义(Goal definitions) --- 3.2 要编译进内核的目标(Bui</description></item><item><title>Linux 内核临时页表初始化</title><link>http://0.0.0.0:1313/post/os/linux-kernel/linux-%E5%86%85%E6%A0%B8%E4%B8%B4%E6%97%B6%E9%A1%B5%E8%A1%A8%E5%88%9D%E5%A7%8B%E5%8C%96/</link><pubDate>Mon, 15 Apr 2019 16:01:23 +0800</pubDate><author>yuanye.ma@qq.com (Yuanye Ma)</author><guid>http://0.0.0.0:1313/post/os/linux-kernel/linux-%E5%86%85%E6%A0%B8%E4%B8%B4%E6%97%B6%E9%A1%B5%E8%A1%A8%E5%88%9D%E5%A7%8B%E5%8C%96/</guid><description>Linux 内核临时页表初始化 基于 linux 2.6.30.4分析x86平台相关代码 **64位系统：**使用四级分页或三级分页，跟硬件有关。 **未开启PAE(物</description></item><item><title>Linux设备驱动基础</title><link>http://0.0.0.0:1313/post/os/linux-kernel/2020-10-10-%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8%E5%9F%BA%E7%A1%80/</link><pubDate>Mon, 15 Apr 2019 16:01:23 +0800</pubDate><author>yuanye.ma@qq.com (Yuanye Ma)</author><guid>http://0.0.0.0:1313/post/os/linux-kernel/2020-10-10-%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8%E5%9F%BA%E7%A1%80/</guid><description>1.2 设备驱动基础 驱动基本结构 // hello_drv.c #include &amp;lt;linux/init.h&amp;gt; #include &amp;lt;linux/module.h&amp;gt; static int __init hello_drv_init(void) { printk(KERN_ERR&amp;#34;-----------from hello.ko : %s %s---------\n&amp;#34;, __FILE__, __FUNCTION__); return 0; } static void __exit hello_drv_exit(void) { printk(&amp;#34;-----------from hello.ko : %s %s---------\n&amp;#34;, __FILE__, __FUNCTION__); } module_init(hello_drv_init); module_exit(hello_drv_exit); MODULE_LICENSE(&amp;#34;GPL&amp;#34;); 基本Makefile结构 # 内核源码路径 KERNEL_DIR</description></item><item><title>Linux设备驱动开发--中断用法</title><link>http://0.0.0.0:1313/post/os/linux-kernel/2020-10-27-linux%E9%A9%B1%E5%8A%A8%E4%B9%8B%E4%B8%AD%E6%96%AD%E6%8C%89%E9%94%AE%E9%A9%B1%E5%8A%A8/</link><pubDate>Mon, 15 Apr 2019 16:01:23 +0800</pubDate><author>yuanye.ma@qq.com (Yuanye Ma)</author><guid>http://0.0.0.0:1313/post/os/linux-kernel/2020-10-27-linux%E9%A9%B1%E5%8A%A8%E4%B9%8B%E4%B8%AD%E6%96%AD%E6%8C%89%E9%94%AE%E9%A9%B1%E5%8A%A8/</guid><description>Linux设备驱动开发&amp;ndash;中断用法 [TOC] 1. linux中file cdev inode之间的关系； struct file对象 ： 描述进程中打开文件的信息，包括文</description></item><item><title>编译内核文档</title><link>http://0.0.0.0:1313/post/os/linux-kernel/%E7%BC%96%E8%AF%91%E5%86%85%E6%A0%B8%E6%96%87%E6%A1%A3/</link><pubDate>Mon, 15 Apr 2019 16:01:23 +0800</pubDate><author>yuanye.ma@qq.com (Yuanye Ma)</author><guid>http://0.0.0.0:1313/post/os/linux-kernel/%E7%BC%96%E8%AF%91%E5%86%85%E6%A0%B8%E6%96%87%E6%A1%A3/</guid><description>$ make htmldocs Documentation/Makefile:39: The &amp;#39;sphinx-build&amp;#39; command was not found. Make sure you have Sphinx installed and in PATH, or set the SPHINXBUILD make variable to point to the full path of the &amp;#39;sphinx-build&amp;#39; executable. Detected OS: Ubuntu 20.04.1 LTS. Warning: better to also install &amp;#34;convert&amp;#34;. Warning: better to also install &amp;#34;dot&amp;#34;. Warning: better to also install &amp;#34;dvipng&amp;#34;. ERROR: please install &amp;#34;ensurepip&amp;#34;, otherwise, build won&amp;#39;t work. Warning: better to also</description></item></channel></rss>