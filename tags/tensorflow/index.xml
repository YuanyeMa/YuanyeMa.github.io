<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TensorFlow on Yuanye Ma&#39;s Blog</title>
    <link>http://0.0.0.0:1313/tags/tensorflow/</link>
    <description>Recent content in TensorFlow on Yuanye Ma&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>yuanye.ma@qq.com (Yuanye Ma)</managingEditor>
    <webMaster>yuanye.ma@qq.com (Yuanye Ma)</webMaster>
    <lastBuildDate>Mon, 15 Apr 2019 16:01:23 +0800</lastBuildDate>
    <atom:link href="http://0.0.0.0:1313/tags/tensorflow/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>tensorboardX的用法</title>
      <link>http://0.0.0.0:1313/post/programing/tensorboard/2019-07-20-tensorboardx%E7%9A%84%E7%AE%80%E5%8D%95%E7%94%A8%E6%B3%95/</link>
      <pubDate>Mon, 15 Apr 2019 16:01:23 +0800</pubDate><author>yuanye.ma@qq.com (Yuanye Ma)</author>
      <guid>http://0.0.0.0:1313/post/programing/tensorboard/2019-07-20-tensorboardx%E7%9A%84%E7%AE%80%E5%8D%95%E7%94%A8%E6%B3%95/</guid>
      <description>pytorch+tensorboardX 简单总结一下tensorboardX的用法。 import numpy as np from tensorboardX import SummaryWriter write = SummaryWriter() for epoch in range(100): write.add_scalar(&amp;#39;scale/test&amp;#39;, np.random.rand(), epoch) write.add_scalars(&amp;#39;scale/scales_test&amp;#39;, {&amp;#39;xsinx&amp;#39;:epoch*np.sin(epoch), &amp;#39;xcosx&amp;#39; : epoch*np.cos(epoch)}, epoch) write.close() 在终端中运行上边代码:python ./ten</description>
    </item>
  </channel>
</rss>
